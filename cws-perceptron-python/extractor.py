#coding=utf-8

import unicodedata
from symbols import BOT , EOT , BOS , EOS  

class Extractor(object) :
    
    def __init__(self,lexicon) :
        self.lexicon = lexicon

    def extract_emit_features(self,instance) :
        '''
        extract emit feature(features of current sequence) from instance 
        
        Args :
            instance : list , every element is a unicode char
        Returns :
            emit_features : list of list , 
                            most basic element is feature , is str generated by template rule ,
                            inner list is the feature list , which length is decided by the feature template . 
                            outer list is the feature list for every unigram of the instance
                            => [ [ "1=我","2=是",..] ... ] 
        '''
        instance_len = len(instance)
        emit_features_list = []
        for pos in range(instance_len) :
            #! unigram word feature
            W_cur = instance[pos]
            W_pre2 = pos - 2 < 0 ? BOS : instance[pos-2]
            W_pre1 = pos - 1 < 0 ? BOS : instance[pos-1]
            W_nxt1 = pos + 1 > instance_len - 1 ? EOS : intance[pos + 1]
            W_nxt2 = pos + 2 > instance_len -1  ? EOS : instance[pos + 2]
            #! type feature
            T_cur = get_unicode_type()
        
